<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>de.ollie</groupId>
		<artifactId>memnon</artifactId>
		<version>0.0.1</version>
	</parent>

	<artifactId>memnon-shell</artifactId>
	<packaging>jar</packaging>

	<name>MemNoN (Shell)</name>
	<description>The shell of the application.</description>

	<properties>
		<plugin.prettier.goal>write</plugin.prettier.goal>
	</properties>

	<dependencies>
		<!-- memnon -->
		<dependency>
			<groupId>de.ollie</groupId>
			<artifactId>memnon-base-lib</artifactId>
			<version>0.0.1</version>
		</dependency>
		<dependency>
			<groupId>de.ollie</groupId>
			<artifactId>memnon-service</artifactId>
			<scope>runtime</scope>
			<version>0.0.1</version>
		</dependency>
		<dependency>
			<groupId>de.ollie</groupId>
			<artifactId>memnon-service-interface</artifactId>
			<version>0.0.1</version>
		</dependency>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.inject</groupId>
			<artifactId>jakarta.inject-api</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.annotation</groupId>
			<artifactId>jakarta.annotation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.shell</groupId>
			<artifactId>spring-shell-starter</artifactId>
			<version>3.1.6</version>
		</dependency>
		<!-- Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>false</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.hubspot.maven.plugins</groupId>
				<artifactId>prettier-maven-plugin</artifactId>
				<version>0.22</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>${plugin.prettier.goal}</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<prettierJavaVersion>2.0.0</prettierJavaVersion>
					<printWidth>120</printWidth>
					<tabWidth>2</tabWidth>
					<useTabs>true</useTabs>
					<ignoreConfigFile>true</ignoreConfigFile>
					<ignoreEditorConfig>true</ignoreEditorConfig>
					<!-- Use <inputGlobs> to override the default input patterns -->
					<inputGlobs>
						<!-- These are the default patterns, you can omit
						<inputGlobs> entirely 
							unless you want to override them -->
						<inputGlob>src/main/java/**/*.java</inputGlob>
						<inputGlob>src/test/java/**/*.java</inputGlob>
					</inputGlobs>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
